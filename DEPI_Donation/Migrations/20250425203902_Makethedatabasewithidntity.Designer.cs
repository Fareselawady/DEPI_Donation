// <auto-generated />
using System;
using DEPI_Donation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DEPI_Donation.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    [Migration("20250425203902_Makethedatabasewithidntity")]
    partial class Makethedatabasewithidntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DEPI_Donation.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("CollectedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TargetAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ActivityId")
                        .HasName("PK__Activiti__45F4A7F1550916E8");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Donation", b =>
                {
                    b.Property<int>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DonationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonationId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("DonationDate")
                        .HasColumnType("date");

                    b.Property<int?>("DonorId")
                        .HasColumnType("int")
                        .HasColumnName("DonorID");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("DonationId")
                        .HasName("PK__Donation__C5082EDB7E81B6EF");

                    b.HasIndex("ActivityId");

                    b.HasIndex("DonorId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("DEPI_Donation.Models.DonorNotification", b =>
                {
                    b.Property<int>("DonorId")
                        .HasColumnType("int")
                        .HasColumnName("DonorID");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("DonorId", "NotificationId")
                        .HasName("PK__DonorNot__3722CD7B73A8810A");

                    b.HasIndex("NotificationId");

                    b.ToTable("DonorNotifications");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12171BDDDB");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A58925DCF70");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ReportId");

                    b.HasIndex("ActivityId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("DEPI_Donation.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLogout")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Donor");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4C53F7E6B7");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D10534AF242973")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Donation", b =>
                {
                    b.HasOne("DEPI_Donation.Models.Activity", "Activity")
                        .WithMany("Donations")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DEPI_Donation.Models.User", "Donor")
                        .WithMany("Donations")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DEPI_Donation.Models.Payment", "Payment")
                        .WithMany("Donations")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Activity");

                    b.Navigation("Donor");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("DEPI_Donation.Models.DonorNotification", b =>
                {
                    b.HasOne("DEPI_Donation.Models.User", "Donor")
                        .WithMany("DonorNotifications")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DonorNoti__Donor__403A8C7D");

                    b.HasOne("DEPI_Donation.Models.Notification", "Notification")
                        .WithMany("DonorNotifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DonorNoti__Notif__412EB0B6");

                    b.Navigation("Donor");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Report", b =>
                {
                    b.HasOne("DEPI_Donation.Models.Activity", "Activity")
                        .WithMany("Reports")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Activity", b =>
                {
                    b.Navigation("Donations");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Notification", b =>
                {
                    b.Navigation("DonorNotifications");
                });

            modelBuilder.Entity("DEPI_Donation.Models.Payment", b =>
                {
                    b.Navigation("Donations");
                });

            modelBuilder.Entity("DEPI_Donation.Models.User", b =>
                {
                    b.Navigation("Donations");

                    b.Navigation("DonorNotifications");
                });
#pragma warning restore 612, 618
        }
    }
}
