@model List<DEPI_Donation.Models.Activity>

@{
    ViewData["Title"] = "Activities";
    Layout = "~/Views/Shared/NewLayout.cshtml";
}

<style>
    /* General styles for activity cards */
    .activity-card {
        background-color: #f7f9fc;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #d1e0f0;
        border-radius: 16px;
        font-family: 'Segoe UI', sans-serif;
        padding: 20px;
    }

        .activity-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.75rem 1.5rem rgba(0, 0, 0, 0.1);
        }

        /* Title style */
        .activity-card .card-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #3b82f6;
            font-family: 'Segoe UI', sans-serif;
            margin-bottom: 12px;
        }

        /* Text style */
        .activity-card .card-text,
        .activity-card li {
            font-size: 1rem;
            color: #5a5a5a;
            font-family: 'Segoe UI', sans-serif;
            line-height: 1.6;
        }

        /* Button styles */
        .activity-card .btn {
            transition: all 0.3s ease-in-out;
            font-size: 1rem;
            font-family: 'Segoe UI', sans-serif;
            padding: 10px 20px;
            border-radius: 12px;
            display: block;
            width: 100%;
            text-align: center;
        }

            .activity-card .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            }

        /* Specific button styles */
        .activity-card .btn-warning {
            background-color: #fcd34d;
            border-color: #fcd34d;
            color: #1f2937;
        }

            .activity-card .btn-warning:hover {
                background-color: #fbbf24;
            }

        .activity-card .btn-success {
            background-color: #34d399;
            border-color: #34d399;
            color: #1f2937;
        }

            .activity-card .btn-success:hover {
                background-color: #10b981;
            }

        .activity-card .btn-danger {
            background-color: #f87171;
            border-color: #f87171;
            color: #1f2937;
        }

            .activity-card .btn-danger:hover {
                background-color: #f56565;
            }

    /* Centering the cards */
    .activity-cards-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1.5rem;
    }

    .activity-card-wrapper {
        flex: 1 0 30%;
        max-width: 340px;
        margin-bottom: 1.5rem;
        min-width: 280px;
    }

        /* Card content padding */
        .activity-card-wrapper .card-body {
            padding: 20px;
        }

    .edit-input {
        font-size: 0.9rem;
        font-family: 'Segoe UI', sans-serif;
        padding: 8px;
        border-radius: 8px;
        width: 100%;
    }

        .edit-input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 5px rgba(59, 130, 246, 0.2);
        }
</style>
<section class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-dark">📋 Activity List</h2>
        @if (User.IsInRole("Admin"))
        {
            <a href="@Url.Action("Create", "Activity")" class="btn btn-primary shadow-sm px-4 py-2">➕ Add Activity</a>
        }
    </div>

    <div class="activity-cards-container">
        @foreach (var activity in Model)
        {
            <div class="activity-card-wrapper" id="activity-@activity.ActivityId">
                <div class="card activity-card shadow-sm h-100">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="field" id="Title-@activity.ActivityId">@activity.Title</span>
                            <input type="text" class="form-control form-control-sm edit-input mt-1" id="edit-Title-@activity.ActivityId" value="@activity.Title" style="display:none;" />
                        </h5>
                        <p class="card-text">
                            <span class="field" id="Description-@activity.ActivityId">@activity.Description</span>
                            <textarea class="form-control form-control-sm edit-input mt-1" id="edit-Description-@activity.ActivityId" style="display:none;">@activity.Description</textarea>
                        </p>

                        <ul class="list-unstyled mb-3">
                            <li>
                                <strong>Category:</strong>
                                <span class="field" id="Category-@activity.ActivityId">@activity.Category</span>
                                <input type="text" class="form-control form-control-sm edit-input" id="edit-Category-@activity.ActivityId" value="@activity.Category" style="display:none;" />
                            </li>
                            <li>
                                <strong>Target:</strong>
                                <span class="field" id="TargetAmount-@activity.ActivityId">@activity.TargetAmount?.ToString("F2")</span>
                                <input type="number" step="0.01" class="form-control form-control-sm edit-input" id="edit-TargetAmount-@activity.ActivityId" value="@activity.TargetAmount" style="display:none;" />
                            </li>
                            <li><strong>Collected:</strong> @activity.CollectedAmount.ToString("C")</li>
                            <li><strong>Start:</strong> @activity.StartDate?.ToString("yyyy-MM-dd")</li>
                            <li><strong>End:</strong> @activity.EndDate?.ToString("yyyy-MM-dd")</li>
                            <li>
                                <strong>Status:</strong>
                                <span class="field" id="Status-@activity.ActivityId">@activity.Status</span>
                                <input type="text" class="form-control form-control-sm edit-input" id="edit-Status-@activity.ActivityId" value="@activity.Status" style="display:none;" />
                            </li>
                        </ul>

                        <div class="d-flex gap-2">
                            @if (User.IsInRole("Admin"))
                            {
                                <button class="btn btn-sm btn-warning edit-btn w-100" data-id="@activity.ActivityId">✏️ Edit</button>
                                <button class="btn btn-sm btn-success save-btn w-100" data-id="@activity.ActivityId" style="display:none;">💾 Save</button>
                                <button class="btn btn-sm btn-danger delete-btn w-100" data-id="@activity.ActivityId">🗑️ Delete</button>
                            }
                            @if (User.Identity!.IsAuthenticated)
                            {
                                <button class="btn btn-sm btn-primary donate-btn w-100" data-id="@activity.ActivityId">$ Donate</button>
                            }
                        </div>

                        <!-- نموذج التبرع -->
                        <div class="donation-form" data-id="@activity.ActivityId" style="display:none;">
                            <label for="paymentMethod-@activity.ActivityId">Choose a payment method:</label>
                            <select class="form-control form-control-sm" id="paymentMethod-@activity.ActivityId">
                                <option value="">Select payment method</option>
                                @foreach (var method in ViewBag.PaymentMethods)
                                {
                                    <option value="@method.PaymentId">@method.PaymentMethod</option> <!-- تم تعديل @method.PaymentMethod بناءً على الـ Model -->
                                }
                            </select>

                            <label for="donationAmount-@activity.ActivityId" class="mt-2">Enter donation amount:</label>
                            <input type="number" class="form-control form-control-sm" id="donationAmount-@activity.ActivityId" placeholder="Enter amount" min="1" step="any" />

                            <button class="btn btn-sm btn-primary mt-2 donate-submit" data-id="@activity.ActivityId">Donate</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.edit-btn').click(function () {
                var id = $(this).data('id');
                $('#activity-' + id + ' .field').hide();
                $('#activity-' + id + ' .edit-input').show();
                $(this).hide();
                $('#activity-' + id + ' .save-btn').show();
            });

            $('.save-btn').click(function () {
                var id = $(this).data('id');
                var updated = {
                    ActivityId: id,
                    Title: $('#edit-Title-' + id).val(),
                    Description: $('#edit-Description-' + id).val(),
                    Category: $('#edit-Category-' + id).val(),
                    TargetAmount: $('#edit-TargetAmount-' + id).val(),
                    Status: $('#edit-Status-' + id).val()
                };

                $.ajax({
                    url: '/Activity/Edit/' + id,
                    type: 'POST',
                    data: updated,
                    success: function (response) {
                        if (response.success) {
                            $('#Title-' + id).text(updated.Title);
                            $('#Description-' + id).text(updated.Description);
                            $('#Category-' + id).text(updated.Category);
                            $('#TargetAmount-' + id).text(parseFloat(updated.TargetAmount).toFixed(2));
                            $('#Status-' + id).text(updated.Status);

                            $('#activity-' + id + ' .edit-input').hide();
                            $('#activity-' + id + ' .field').show();
                            $('#activity-' + id + ' .save-btn').hide();
                            $('#activity-' + id + ' .edit-btn').show();

                            alert('Activity updated successfully!');
                        } else {
                            alert('Failed to update activity: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while updating the activity.');
                    }
                });
            });

            $('.delete-btn').click(function () {
                var id = $(this).data('id');
                if (confirm('Are you sure you want to delete this activity?')) {
                    $.ajax({
                        url: '/Activity/DeleteConfirmed/' + id,
                        type: 'POST',
                        success: function (response) {
                            if (response.success) {
                                $('#activity-' + id).remove();
                                alert('Activity deleted successfully!');
                            } else {
                                alert('Failed to delete activity: ' + response.message);
                            }
                        },
                        error: function () {
                            alert('An error occurred while deleting the activity.');
                        }
                    });
                }
            });

              $(".donate-btn").on("click", function() {
            var activityId = $(this).data("id");

            // إظهار نموذج التبرع
            $(".donation-form[data-id='" + activityId + "']").show();

            // جلب طرق الدفع عبر AJAX
            $.ajax({
                url: '@Url.Action("GetPaymentMethods", "Activity")', // رابط الـ Controller الذي يعرض طرق الدفع
                type: 'GET',
                success: function(response) {
                    var paymentSelect = $("#paymentMethod-" + activityId);
                    paymentSelect.empty(); // مسح الاختيارات القديمة
                    paymentSelect.append('<option value="">Select payment method</option>'); // إضافة الخيار الافتراضي

                    // إضافة طرق الدفع إلى القائمة
                    $.each(response, function(index, method) {
                        paymentSelect.append('<option value="' + method.paymentId + '">' + method.paymentMethod + '</option>');
                    });
                },
                error: function() {
                    alert('Error loading payment methods.');
                }
            });
        });

        // عند الضغط على زر التبرع في نموذج التبرع
        $(".donate-submit").on("click", function() {
            var activityId = $(this).data("id");
            var paymentMethod = $("#paymentMethod-" + activityId).val();
            var amount = $("#donationAmount-" + activityId).val();

            if (!paymentMethod || !amount) {
                alert("Please select a payment method and enter a donation amount.");
                return;
            }

            // إرسال البيانات للتبرع عبر AJAX
            $.ajax({
                url: '@Url.Action("Donate", "Activity")', // رابط الـ Controller الذي يعالج التبرعات
                type: 'POST',
                data: {
                    activityId: activityId,
                    paymentMethod: paymentMethod,
                    amount: amount
                },
                success: function(response) {
                    if (response.success) {
                        alert('Donation successful!');
                        $(".donation-form[data-id='" + activityId + "']").hide(); // إخفاء النموذج بعد التبرع
                    } else {
                        alert('Donation failed: ' + response.message);
                    }
                },
                error: function() {
                    alert('Error making donation.');
                }
            });
        });
        });
    </script>
}

